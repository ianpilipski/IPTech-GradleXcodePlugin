plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '0.11.0'
}

sourceCompatibility = 1.8

repositories {
    jcenter()
}

//allow publish key/secret override from environment variable
task setupPluginUpload {
    doLast {
        String key = System.env.gradlePublishKey
        String secret = System.env.gradlePublishSecret
        if(!key || !secret) {
            throw new RuntimeException("gradlePublishKey and/or gradlePublishSecret are not defined environment variables")
        }

        System.properties.setProperty('gradle.publish.key', System.env.gradlePublishKey)
        System.properties.setProperty('gradle.publish.secret', System.env.gradlePublishSecret)
    }
    tasks.publishPlugins.dependsOn(delegate)
}

version = '0.1.0'
group 'com.iptech.gradle'
description = 'A plugin that will build xcode projects'

pluginBundle {
    website = 'https://github.com/ianpilipski/IPTech-GradleXcodePlugin'
    vcsUrl = 'https://github.com/ianpilipski/IPTech-GradleXcodePlugin'
    tags = ['xcode', 'iptech']
}

gradlePlugin {
    plugins {
        unityPlugin {
            id = 'com.iptech.gradle.xcode-plugin'
            displayName = 'IPTech Xcode Plugin'
            description = 'A plugin that will build xcode projects'
            implementationClass = 'com.iptech.gradle.xcode.XcodePlugin'
        }
    }
}

dependencies {
    implementation gradleApi()
}
